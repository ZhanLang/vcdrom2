; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#include 'include\sapi\sapi.iss'
#define MyAppName "极客虚拟光驱2.0"


#define MyAppVersion "2.0.1.1"
#define PacketID  	  2011 ;包ID

#define MyAppPublisher "极客工作室."
#define MyAppURL "http://www.jicer.cn/"
#define MyAppExeName "VCDRom.exe"
#define MyDefOper    "0"          ;默认渠道ID


#define ProID		2;产品ID
#define ApiHost "http://update.jicer.cn"
#define InstallUri  "install"
#define UninstallUri "uninstall"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{C086C1DD-17D2-40AF-82B6-821F36D8E996}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}

UsePreviousAppDir=true
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}

;LicenseFile=License_cn.txt
OutputDir=release
OutputBaseFilename={#MyAppName}_{#MyDefOper}_{#MyAppVersion}
SetupIconFile=Logo.ico
UninstallDisplayIcon   ={app}\{#MyAppExeName}
Compression=lzma
SolidCompression=true
VersionInfoDescription="{#MyAppName} 安装程序"
VersionInfoCopyright="{#MyAppURL}"
DisableWelcomePage=yes
DisableFinishedPage=yes

DisableReadyPage=true
DisableStartupPrompt=true
DisableReadyMemo=true
DisableDirPage=false
DisableProgramGroupPage=true
PrivilegesRequired=admin
ChangesAssociations=true
CloseApplications=yes
DirExistsWarning=no
[Languages]
Name: chinesesimp; MessagesFile: compiler:Languages\ChineseSimp.isl



[Files]
Source: ..\bin\drive\*; DestDir: {app}\drive; Flags: ignoreversion
Source: ..\bin\drive\sha1\x64\*; DestDir: {app}\drive\sha1\x64; Flags: ignoreversion
Source: ..\bin\drive\sha1\x86\*; DestDir: {app}\drive\sha1\x86; Flags: ignoreversion
Source: ..\bin\drive\sha1\*; DestDir: {app}\drive\sha1; Flags: ignoreversion

Source: ..\bin\drive\sha256\x64\*; DestDir: {app}\drive\sha256\x64; Flags: ignoreversion
Source: ..\bin\drive\sha256\x86\*; DestDir: {app}\drive\sha256\x86; Flags: ignoreversion
Source: ..\bin\drive\sha256\*; DestDir: {app}\drive\sha256; Flags: ignoreversion
Source: ..\bin\icon\*; DestDir: {app}\icon; Flags: ignoreversion
Source: ..\bin\DevCmd.exe; DestDir: {app}; Flags: ignoreversion
Source: ..\bin\vcdrom.exe; DestDir: {app}; Flags: ignoreversion
Source: ..\bin\stdlog.dll; DestDir: {app}; Flags: ignoreversion
Source: ..\bin\syslay.dll; DestDir: {app}; Flags: ignoreversion
Source: ..\bin\uires.7z; DestDir: {app}; Flags: ignoreversion
[Icons]
Name: {group}\{#MyAppName}; Filename: {app}\{#MyAppExeName}
Name: {userdesktop}\{#MyAppName}; Filename: {app}\{#MyAppExeName}

[Run]
Filename: {app}\DevCmd.exe; Parameters: "install_drv"; StatusMsg: """正在安装驱动，如果有提示，请予以放行..."""; Flags: runascurrentuser
Filename: {app}\{#MyAppExeName}; Description: {cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}; Flags: nowait postinstall skipifsilent

[InstallDelete]
Name: {app}; Type: filesandordirs

[UninstallDelete]
Name: {app}; Type: filesandordirs

[Registry]
Root: HKCR; Subkey: .iso; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .nrg; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .mds; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .mdf; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .img; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .cue; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .ccd; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: {#MyAppName}; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletekey
Root: HKCR; Subkey: {#MyAppName}\DefaultIcon; ValueData: {app}\icon\iso.ico; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: {#MyAppName}\shell\open\command; ValueData: """{app}\{#MyAppExeName}"" ""%1"""; ValueType: string; ValueName: ; Flags: uninsdeletevalue

[Code]

var oper:String;


procedure SetOper();
var
  strArray: TArrayOfString;
  strFileName : String;
  strExeName:String;
begin
    oper:= '{#MyDefOper}';
	strFileName := Format('极客虚拟光驱_%s.tmp', ['{#MyAppVersion}']);
	strExeName := ExtractFileName(ParamStr(0));
	if strFileName = strExeName then
	begin
		oper := '360';
	end
	else
	begin	
		Explode(strArray, ExtractFileName(ParamStr(0)), '_');
		if GetArrayLength(strArray) > 2 then
		begin
		oper:= strArray[1];
		end;
	end;
    SetIniString('setting','oper',oper,ExpandConstant('{app}/setting.ini'));
end;

procedure ReportInstall();
var 
    sUserGuid : String;
	strUrl:String;
begin
   sUserGuid := GetUserGuid();
   strUrl:= Format('%s/%s?uguid=%s&prod=%s&packet=%d&prodver=%s&oper=%s&wow64=%d&osver=%d&ant=%s', \
   ['{#ApiHost}','{#InstallUri}', sUserGuid, '{#ProID}', {#PacketID}, '{#MyAppVersion}', oper,IsWindowsX64(), GetMicroVersion(),'100']);
  
   log(strUrl);
   HttpGET( strUrl );
end;

procedure ReportUnInstall();
var 
    sUserGuid : String;
	strUrl:String;

begin
	
	log('Uninstall Oper' + oper);
   sUserGuid := GetUserGuid();
   strUrl:= Format('%s/%s?uguid=%s&prod=%s&packet=%d&prodver=%s&oper=%s&wow64=%d&osver=%d&ant=%s', \
   ['{#ApiHost}','{#UninstallUri}', sUserGuid, '{#ProID}', {#PacketID}, '{#MyAppVersion}', oper,IsWindowsX64(), GetMicroVersion(),'100']);
  
   log(strUrl);
   HttpGET( strUrl );
end;


procedure OnInstallFinesh();
begin
	SetOper();
	ReportInstall();
end;

procedure CurStepChanged (CurStep: TSetupStep ) ;

begin
  if CurStep = ssInstall then
  begin
     TerminateProcessAsName('{#MyAppExeName}');
  end;
  if CurStep = ssDone  then
  begin
      OnInstallFinesh();
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var winHwnd:  HWND;
begin
	if CurUninstallStep = usUninstall then
	begin
		TerminateProcessAsName('{#MyAppExeName}');
		DelTree(ExpandConstant('{app}'), True, True, True);
	end;
	if CurUninstallStep = usUninstall then
	begin
		ReportUnInstall();
	end;
end;

procedure InitializeWizard();
begin
	
end;

function InitializeUninstall(): boolean;
var
  url:string;
begin
  result:=true;
  FileCopy(ExpandConstant('{app}\sapi.dll'),ExpandConstant('{tmp}\sapi.dll'),False);
  oper := GetIniString('setting','oper','0',ExpandConstant('{app}\setting.ini'));
end;

function InitializeSetup(): boolean;
begin
   result:=true;
	ExtractTemporaryFile('sapi.dll');
end;



