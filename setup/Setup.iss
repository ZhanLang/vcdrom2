; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#include 'include\itdownload\it_download.iss'
#include 'include\sapi\sapi.iss'
#define MyAppName "极客虚拟光驱2.0"
#define MyAppVersion "1.0.1.6"
#define MyAppPublisher "极客工作室."
#define MyAppURL "http://www.jicer.cn/"
#define MyAppExeName "VCDRom.exe"
#define MyDefOper    "0"          ;默认渠道ID


[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{C086C1DD-17D2-40AF-82B6-821F36D8E996}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}

UsePreviousAppDir=true
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}

LicenseFile=License_cn.txt
OutputDir=release
OutputBaseFilename=VCDRomSetup_{#MyDefOper}_{#MyAppVersion}
SetupIconFile=bin\Logo.ico
UninstallDisplayIcon   ={app}\{#MyAppExeName}
Compression=lzma
SolidCompression=true
VersionInfoDescription="{#MyAppName} 安装程序"
VersionInfoCopyright="{#MyAppURL}"
DisableWelcomePage=no
DisableFinishedPage=false

DisableReadyPage=true
DisableStartupPrompt=true
DisableReadyMemo=true
DisableDirPage=false
DisableProgramGroupPage=true
PrivilegesRequired=admin
ChangesAssociations=true
CloseApplications=yes
DirExistsWarning=no
[Languages]
Name: chinesesimp; MessagesFile: compiler:Languages\ChineseSimp.isl



[Files]
Source: bin\drive\*; DestDir: {app}\drive; Flags: ignoreversion
Source: bin\drive\sha1\x64\*; DestDir: {app}\drive\sha1\x64; Flags: ignoreversion
Source: bin\drive\sha1\x86\*; DestDir: {app}\drive\sha1\x86; Flags: ignoreversion
Source: bin\drive\sha1\*; DestDir: {app}\drive\sha1; Flags: ignoreversion

Source: bin\drive\sha256\x64\*; DestDir: {app}\drive\sha256\x64; Flags: ignoreversion
Source: bin\drive\sha256\x86\*; DestDir: {app}\drive\sha256\x86; Flags: ignoreversion
Source: bin\drive\sha256\*; DestDir: {app}\drive\sha256; Flags: ignoreversion
Source: bin\icon\*; DestDir: {app}\icon; Flags: ignoreversion
Source: bin\*; DestDir: {app}; Flags: ignoreversion

[Icons]
Name: {group}\{#MyAppName}; Filename: {app}\{#MyAppExeName}
Name: {userdesktop}\{#MyAppName}; Filename: {app}\{#MyAppExeName}

[Run]
Filename: {app}\DevCmd.exe; Parameters: """install_drv"""; StatusMsg: """正在安装驱动，如果有提示，请予以放行..."""; Flags: runascurrentuser
Filename: {app}\{#MyAppExeName}; Description: {cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}; Flags: nowait postinstall skipifsilent

[InstallDelete]
Name: {app}; Type: filesandordirs

[UninstallDelete]
Name: {app}; Type: filesandordirs

[Registry]
Root: HKCR; Subkey: .iso; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .nrg; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .mds; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .mdf; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .img; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .cue; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: .ccd; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletevalue
Root: HKCR; Subkey: {#MyAppName}; ValueData: {#MyAppName}; ValueType: string; ValueName: ; Flags: uninsdeletekey
Root: HKCR; Subkey: {#MyAppName}\DefaultIcon; ValueData: {app}\icon\iso.ico; ValueType: string; ValueName: 
Root: HKCR; Subkey: {#MyAppName}\shell\open\command; ValueData: """{app}\{#MyAppExeName}"" ""%1"""; ValueType: string; ValueName: 

[Code]
procedure Explode(var Dest: TArrayOfString; Text: String; Separator: String);
var
  i, p: Integer;
begin
  i := 0;
  repeat
    SetArrayLength(Dest, i+1);
    p := Pos(Separator,Text);
    if p > 0 then begin
      Dest[i] := Copy(Text, 1, p-1);
      Text := Copy(Text, p + Length(Separator), Length(Text));
      i := i + 1;
    end else begin
      Dest[i] := Text;
      Text := '';
    end;
  until Length(Text)=0;
end;

const wbemFlagForwardOnly = $00000020;

procedure CloseApp(AppName: String);
var
  WbemLocator : Variant;
  WMIService   : Variant;
  WbemObjectSet: Variant;
  WbemObject   : Variant;
begin;
  WbemLocator := CreateOleObject('WbemScripting.SWbemLocator');
  WMIService := WbemLocator.ConnectServer('localhost', 'root\CIMV2');
  WbemObjectSet := WMIService.ExecQuery('SELECT * FROM Win32_Process Where Name="' + AppName + '"');
  if not VarIsNull(WbemObjectSet) and (WbemObjectSet.Count > 0) then
  begin
    WbemObject := WbemObjectSet.ItemIndex(0);
    if not VarIsNull(WbemObject) then
    begin
      WbemObject.Terminate();
      WbemObject := Unassigned;
    end;
  end;
end;

procedure SetOper();
var
  strArray: TArrayOfString;
  oper:String;
begin
    oper:= '{#MyDefOper}';
    Explode(strArray, ExtractFileName(ParamStr(0)), '_');
    if GetArrayLength(strArray) > 2 then
    begin
      oper:= strArray[1];
    end;
    SetIniString('setting','oper',oper,ExpandConstant('{app}/setting.ini'));
end;

procedure CurStepChanged (CurStep: TSetupStep ) ;

begin
  if CurStep = ssInstall then
  begin
     CloseApp('{#MyAppExeName}');
  end;
  if CurStep = ssDone  then
  begin
      SetOper();

  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var winHwnd:  HWND;
begin
  if CurUninstallStep = usUninstall then
    CloseApp('{#MyAppExeName}');
    DelTree(ExpandConstant('{app}'), True, True, True);
end;

procedure InitializeWizard();
begin
   log(GetUserGuid());
end;

function InitializeUninstall(): boolean;
var
  url:string;
begin
  result:=true;

end;

function InitializeSetup(): boolean;
begin
   result:=true;

end;



